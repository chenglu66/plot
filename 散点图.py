# -*- coding: utf-8 -*-
"""
Created on Thu Jun 15 23:00:13 2017

@author: Lenovo-Y430p
"""
from pylab import mpl
mpl.rcParams['font.sans-serif'] = ['SimHei']  
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.ticker import NullFormatter
import numpy as np
# the random data
xcord0 = []; ycord0 = [];xcord1=[];ycord1=[];zcord0=[];zcord1=[]
fr = open('E:\下载\机器学习实战及配套代码\machinelearninginaction\Ch06\EXTRAS\shuju1.txt')#this file was generated by 2normalGen.py
for line in fr.readlines():
    lineSplit = line.strip().split('\t')
    xPt = float(lineSplit[0])
    yPt = float(lineSplit[1])
    zpt=float(lineSplit[2])
    gpt=float(lineSplit[3])
    label = int(lineSplit[4])
    if (label == 1):
        xcord0.append(xPt)
        ycord0.append(yPt)
        zcord0.append(zpt)
    else:
        xcord1.append(xPt)
        ycord1.append(yPt)
        zcord1.append(zpt)
fr.close()
fig = plt.figure()
ax = fig.add_subplot(111)
x = xcord0
y = ycord0
z=zcord0
x1= xcord1
y1=ycord1
z1=zcord1
T = np.arctan2(x,y)
T1 = np.arctan2(x1,y1)
nullfmt   = NullFormatter()         # no labels
# definitions for the axes
left, width = 0.1, 0.65
bottom, height = 0.1, 0.65
bottom_h = left_h = left+width+0.02
#左下角较大的区域，参数为画布的比例
rect_scatter = [left, bottom, width, height]
#上面的条形图区域
rect_histx = [left, bottom_h, width, 0.2]
#右边的条形图区域
rect_histy = [left_h, bottom, 0.2, height]

# figsize参数是以inch为单位，在桌面上显示的画布的大小
plt.figure(1, figsize=(8,8))

axScatter = plt.axes(rect_scatter)
axHistx = plt.axes(rect_histx)
axHisty = plt.axes(rect_histy)

# no labels
#axHistx的x坐标无刻度
axHistx.xaxis.set_major_formatter(nullfmt)
#axHisty的y坐标无刻度
axHisty.yaxis.set_major_formatter(nullfmt)

# the scatter plot:
#画散点图
axScatter.scatter(x,y,c='r',marker=r'$\bigodot$',s=100)
axScatter.scatter(x1,y1,c='b',marker='s',s=100)
# now determine nice limits by hand:
binwidth = 0.25
xymax = np.max( [np.max(np.fabs(x)), np.max(np.fabs(y))] )
lim = xymax+0.1#( int(xymax/binwidth) + 1) * binwidth

axScatter.set_xlim( (0, lim) )
axScatter.set_ylim( (0, lim) )

bins = np.arange(0, lim + binwidth, binwidth)
axHistx.hist(x, bins=bins)
axHisty.hist(y, bins=bins, orientation='horizontal')

axHistx.set_xlim( axScatter.get_xlim() )
axHistx.set_yticklabels(labels=['0','50','100','150','200','250','300','350'],rotation=47)

axHisty.set_ylim( axScatter.get_ylim() )
axHisty.set_xticklabels(labels=['0','50','100','150','200','250','300','350'],rotation=-47)
axScatter.annotate(u'正常工作电压主要集中在这个范围',
         xy=(5,5), xycoords='data',
         xytext=(+10, -30), textcoords='offset points', fontsize=16,
         arrowprops=dict(arrowstyle="->", connectionstyle="arc3,rad=.2"))
#plt.show()
plt.savefig('scatter-hist.png',dpi=700,bbox_inches='tight')
